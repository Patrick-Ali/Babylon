{
	"function": {
		"code": "def <name>(<param>):",
		"connect": {
			"first": "paramater",
			"second": "body",
			"third": "return"
			}
		}, 
	"paramater": "<name> = []",
	"subscript": {
		"beginning": "<name>[",
		"end": "]",
		"open": "["
	},
	"print": {
		"beginning": "print(",
		"end": ")"
	},
	"call":{
		"beginning":"<name>(",
		"end":")"
	},
	"return": "return <name>",

	"if": {
		"beginning":"if ",
		"comp_one": "<para1>",
		"comp_two": "<para1> <comp> <para2>",
		"or":" or ",
		"and": " and ",
		"less": " < ",
		"more": " > ",
	    "less_eq": " <= ",
		"more_eq": " >= ",
		"equal": " == ",
		"in": " in ",
		"not": " not ",

		"end": ":"
	},

	"run": "if __name__ == '__main__':",

	"import": "import <name>",

	"import_from": "from <name> import <name2>",

	"import_everything": "from <name> import *",

	"functions":{

		"add":{
			"name": "op_add",
			"vars": 2,
			"code": "op_add = <var1> + <var2>",
			"return": "return op_add"
		},

		"subtract":{
			"name": "op_sub",
			"vars": 2,
			"code": "op_sub = <var1> - <var2>",
			"return": "return op_sub"
		},

		"divide":{
			"name": "op_div",
			"vars": 2,
			"code": "op_div = <var1> / <var2>",
			"return": "return op_div"
		},

		"multiply":{
			"name": "op_mul",
			"vars": 2,
			"code": "op_mul = <var1> * <var2>",
			"return": "return op_mul"
		}
	}

}